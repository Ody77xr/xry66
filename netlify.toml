[build]
  # Build command using Vite with pnpm
  command = "pnpm install && pnpm run build"
  
  # Directory to publish (Vite output)
  publish = "dist"
  
  # Functions directory
  functions = "netlify/functions"

[build.environment]
  # Environment variables for build process
  NODE_VERSION = "18"
  NPM_FLAGS = "--version"
  PNPM_VERSION = "8"
  SUPABASE_URL = "https://ioqysiylfymkqhzyfphq.supabase.co"
  SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlvcXlzaXlsZnlta3FoenlmcGhxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAwMjEzNTAsImV4cCI6MjA3NTU5NzM1MH0.CQ6IZCU_JgVK4BTAHYcgi12olRILi1MhBbeKh9Fmox4"
  MISTRAL_API_KEY = "8k34GYRHjyOLMcI11OCSQtESLvO9tvPl"

# Function-specific configuration
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Redirect rules for SPA-like behavior
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 404

# Custom headers for security and performance
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdn.tailwindcss.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; media-src 'self' https:; connect-src 'self' https:"

# Cache-busting for HTML, CSS, and JS (no-cache for fresh content)
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.gif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Form handling (if you add contact forms later)
[[forms]]
  name = "contact"

# Edge functions (if needed later)
# [[edge_functions]]
#   function = "auth"
#   path = "/api/auth/*"
